apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki-event-collector
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: loki-event-collector
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create", "delete", "get", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: loki-event-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: loki-event-collector
subjects:
  - kind: ServiceAccount
    name: loki-event-collector
    namespace: kube-system
---
apiVersion: v1
data:
  config.json: |-
    {
        "log": "info",
        "receivers": {
            "loki": {
                "url": "http://loki.kube-system.svc.cluster.local:3100/loki/api/v1/push"
            },
            "stdout": false
        }
    }
kind: ConfigMap
metadata:
  name: loki-event-collector-cm
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-event-collector
  namespace: kube-system
  labels:
    app: loki-event-collector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: loki-event-collector
  template:
    metadata:
      labels:
        app: loki-event-collector
    spec:
      containers:
        - name: collector
          image: 314315960/loki-event-collector:v1.1
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /etc/loki-event-collector
      serviceAccountName: loki-event-collector
      volumes:
        - name: config-volume
          configMap:
            name: loki-event-collector-cm